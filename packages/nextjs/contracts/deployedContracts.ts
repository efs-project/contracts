/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    Indexer: {
      address: "0x8A33b58a05b70618c3fb73E4eFa18163aA4CD0c2",
      abi: [
        {
          inputs: [
            {
              internalType: "contract IEAS",
              name: "eas",
              type: "address",
            },
            {
              internalType: "address",
              name: "prevIndexer",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidAttestation",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidEAS",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidOffset",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "uid",
              type: "bytes32",
            },
          ],
          name: "Indexed",
          type: "event",
        },
        {
          inputs: [],
          name: "getEAS",
          outputs: [
            {
              internalType: "contract IEAS",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getPrevIndexer",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "schemaUID",
              type: "bytes32",
            },
          ],
          name: "getReceivedAttestationUIDCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "schemaUID",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "start",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "length",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "reverseOrder",
              type: "bool",
            },
          ],
          name: "getReceivedAttestationUIDs",
          outputs: [
            {
              internalType: "bytes32[]",
              name: "",
              type: "bytes32[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "attestionUID",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "schemaUID",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "attester",
              type: "address",
            },
          ],
          name: "getReferencingAttestationUIDByAddressCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "attestionUID",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "schemaUID",
              type: "bytes32",
            },
          ],
          name: "getReferencingAttestationUIDCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "attestionUID",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "schemaUID",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "start",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "length",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "reverseOrder",
              type: "bool",
            },
          ],
          name: "getReferencingAttestationUIDs",
          outputs: [
            {
              internalType: "bytes32[]",
              name: "",
              type: "bytes32[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "attestionUID",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "schemaUID",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "attester",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "start",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "length",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "reverseOrder",
              type: "bool",
            },
          ],
          name: "getReferencingAttestationUIDsByAddress",
          outputs: [
            {
              internalType: "bytes32[]",
              name: "",
              type: "bytes32[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "schemaUID",
              type: "bytes32",
            },
          ],
          name: "getSchemaAttestationUIDCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "schemaUID",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "start",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "length",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "reverseOrder",
              type: "bool",
            },
          ],
          name: "getSchemaAttestationUIDs",
          outputs: [
            {
              internalType: "bytes32[]",
              name: "",
              type: "bytes32[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "schemaUID",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "attester",
              type: "address",
            },
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "getSchemaAttesterRecipientAttestationUIDCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "schemaUID",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "attester",
              type: "address",
            },
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "start",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "length",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "reverseOrder",
              type: "bool",
            },
          ],
          name: "getSchemaAttesterRecipientAttestationUIDs",
          outputs: [
            {
              internalType: "bytes32[]",
              name: "",
              type: "bytes32[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "attester",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "schemaUID",
              type: "bytes32",
            },
          ],
          name: "getSentAttestationUIDCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "attester",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "schemaUID",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "start",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "length",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "reverseOrder",
              type: "bool",
            },
          ],
          name: "getSentAttestationUIDs",
          outputs: [
            {
              internalType: "bytes32[]",
              name: "",
              type: "bytes32[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "attestationUID",
              type: "bytes32",
            },
          ],
          name: "indexAttestation",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32[]",
              name: "attestationUIDs",
              type: "bytes32[]",
            },
          ],
          name: "indexAttestations",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "attestationUID",
              type: "bytes32",
            },
          ],
          name: "isAttestationIndexed",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "version",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        version: "eas/contracts/Semver.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
